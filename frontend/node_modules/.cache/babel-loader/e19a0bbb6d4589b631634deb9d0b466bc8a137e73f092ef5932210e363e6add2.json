{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { getProductsReducer } from '';\nconst reducer = combineReducers({\n  getProducts: getProductsReducer,\n  getProductDetails: getProductDetailsReducer\n});\nconst middleware = [thunk];\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["combineReducers","createStore","applyMiddleware","composeWithDevTools","thunk","getProductsReducer","reducer","getProducts","getProductDetails","getProductDetailsReducer","middleware","store"],"sources":["D:/faizan/Flipkart clone/frontend/src/redux/store.js"],"sourcesContent":["import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { getProductsReducer } from ''\r\n\r\n\r\nconst reducer = combineReducers({\r\n    getProducts: getProductsReducer,\r\n    getProductDetails: getProductDetailsReducer\r\n})\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\nexport default store;"],"mappings":"AAAA,SAASA,eAAe,EAAEC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,kBAAkB,QAAQ,EAAE;AAGrC,MAAMC,OAAO,GAAGN,eAAe,CAAC;EAC5BO,WAAW,EAAEF,kBAAkB;EAC/BG,iBAAiB,EAAEC;AACvB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAG,CAACN,KAAK,CAAC;AAE1B,MAAMO,KAAK,GAAGV,WAAW,CACrBK,OAAO,EACPH,mBAAmB,CAACD,eAAe,CAAC,GAAGQ,UAAU,CAAC,CACtD,CAAC;AACD,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}